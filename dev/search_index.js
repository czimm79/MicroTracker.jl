var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"I see this as a section that contains the function docstrings for everything in the package.\nI'll have to think about how to break it down into modules so its sorted here and easily digestible.","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [MicroTracker]","category":"page"},{"location":"api/#MicroTracker.collapse_time_data-Tuple{Any}","page":"API","title":"MicroTracker.collapse_time_data","text":"collapse_time_data(df)\n\nCollapse each time-series microbot trajectory into a single row of data for each microbot.\n\nFor full description of each output variable, see these docs (ref needed).\n\n\n\n\n\n","category":"method"},{"location":"api/#MicroTracker.detrend-Tuple{AbstractVector}","page":"API","title":"MicroTracker.detrend","text":"detrend(y::AbstractVector)\n\nRemove a linear trend in y.\n\n\n\n\n\n","category":"method"},{"location":"api/#MicroTracker.estimate_omega-Tuple{AbstractVector, AbstractVector}","page":"API","title":"MicroTracker.estimate_omega","text":"estimate_omega(x::AbstractVector, y::AbstractVector)\n\nGet the highest frequency peak of x, y data and return the corresponding xf divided by 2.\n\nThis works for rolling microbots when the y data exhibits two peaks every rotation. Depending on the data, this could be the Angle, Major_m, or V columns.\n\n\n\n\n\n","category":"method"},{"location":"api/#MicroTracker.fftclean-Tuple{AbstractVector, AbstractVector}","page":"API","title":"MicroTracker.fftclean","text":"fftclean(x::AbstractVector, y::AbstractVector)\n\nTransform time data x, y into the frequency domain. Returns xf, yf.\n\n\n\n\n\n","category":"method"},{"location":"api/#MicroTracker.fit_line-Tuple{AbstractVector, AbstractVector}","page":"API","title":"MicroTracker.fit_line","text":"fit_line(x::AbstractVector, y::AbstractVector)\n\nFit a linear equation to data x, y. Returns m, b.\n\ny = mx + b\n\nDependent on Optim.\n\n\n\n\n\n","category":"method"},{"location":"api/#MicroTracker.get_particle_csvs-Tuple{}","page":"API","title":"MicroTracker.get_particle_csvs","text":"get_particle_csvs()\n\nReturn a list of all .csv files contained in the particle_data folder.\n\n\n\n\n\n","category":"method"},{"location":"api/#MicroTracker.read_linked_csv-Tuple{Any}","page":"API","title":"MicroTracker.read_linked_csv","text":"read_linked_csv(filename)\n\nRead a linkedcsv into a DataFrame. Assumes the .csv file is in the `linkedresults` folder.\n\n\n\n\n\n","category":"method"},{"location":"experimental/#Experimental","page":"Experimental","title":"Experimental","text":"","category":"section"},{"location":"experimental/#Setup","page":"Experimental","title":"Setup","text":"","category":"section"},{"location":"experimental/","page":"Experimental","title":"Experimental","text":"A study contains multiple independent variables (temperature, field strength, microbot design, viscosity, geometry). You'll have a separate video for each of these.","category":"page"},{"location":"experimental/","page":"Experimental","title":"Experimental","text":"An example! Lets say we're studying temperature and field strength. Name your video names accordingly. Talk about file naming formats.","category":"page"},{"location":"experimental/#Crop-and-clip-your-video","page":"Experimental","title":"Crop and clip your video","text":"","category":"section"},{"location":"experimental/","page":"Experimental","title":"Experimental","text":"ImageJ (Fiji) is used to look at microscopy vids","category":"page"},{"location":"experimental/#Segment-and-make-binary-through-thresholding","page":"Experimental","title":"Segment and make binary through thresholding","text":"","category":"section"},{"location":"experimental/","page":"Experimental","title":"Experimental","text":"Have a macro here to do that:","category":"page"},{"location":"overview/#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"So you have a suite of microscopy video of microbots? Here's how to go start to finish to analyze the data and create publication ready figures.","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"Here's a summary of what will happen in the following sections:","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"data preparation outside of this package\nstart using MicroTracker.jl\nanalyze data\nmake publication figures","category":"page"},{"location":"overview/#Installation","page":"Overview","title":"Installation","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"To install the package type:","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"julia> ] add MicroTracker","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"To use the package type","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"julia> using MicroTracker","category":"page"},{"location":"settingup/#Setting-Up-(for-beginners)","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"","category":"section"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"Using a notebook environment like Pluto or Jupyter doesn't work well when developing and contributing to an open source package. This page is a quick set up guide for using Visual Studio Code (VSCode) with the Julia extension to develop MicroTracker.jl.","category":"page"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"note: Note\nThis is by no means the only way to accomplish this. This is just the method I prefer and have found the easiest while developing MicroTracker.","category":"page"},{"location":"settingup/#VS-Code","page":"Setting Up (for beginners)","title":"VS Code","text":"","category":"section"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"Install Visual Studio Code and the Julia extension. \nEnsure you can run a hello world julia script, detailed in the getting started page.\nGet accustomed to running code in the integrated Julia REPL in VSCode using keybinds like shift+enter and ctrl+enter. This is also detailed in the extension docs here.\nAdd Revise.jl to your base Julia environment. By default, the VSCode Julia extension detects that its available and automatically loads it when starting a Julia extension integrated REPL in VSCode.","category":"page"},{"location":"settingup/#GitHub-Desktop","page":"Setting Up (for beginners)","title":"GitHub Desktop","text":"","category":"section"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"Download Github Desktop.\nFile -> Clone Repository -> paste in the URL for MicroTracker.jl. https://github.com/czimm79/MicroTracker.jl.\nRight click on Current Repository (MicroTracker.jl) -> Open in Visual Studio Code.","category":"page"},{"location":"settingup/#Setting-up-environment","page":"Setting Up (for beginners)","title":"Setting up environment","text":"","category":"section"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"The dependent packages for MicroTracker normally automatically install behind the scenes when you use ] add MicroTracker in the REPL. When developing, we need to instantiate that dependency environment.","category":"page"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"Open the command palette in VSCode (ctrl+shift+p) and select Julia: Start REPL. Activate the MicroTracker environment:","category":"page"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"(v1.8) pkg> activate .","category":"page"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"You should be able to run the test command in the pkg mode and all tests should pass. You are now ready to make changes!","category":"page"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"note: Note\nWhen opening the package, sometimes VSCode will automatically recognize that the MicroTracker environment should be activated, and do it for you. If this is the case, instead of (v1.8), you'll see MicroTracker, and you can skip step 2.","category":"page"},{"location":"settingup/#Common-hiccups","page":"Setting Up (for beginners)","title":"Common hiccups","text":"","category":"section"},{"location":"settingup/","page":"Setting Up (for beginners)","title":"Setting Up (for beginners)","text":"Sometimes when changing the dependencies of MicroTracker, the CI for the docs will fail. I fixed this by activating the docs env using activate ./docs and then resolve.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MicroTracker","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for MicroTracker - a Julia package for analyzing microscopy videos of microbots.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nThis repository is under construction and not ready for use.","category":"page"},{"location":"#What-can-it-do?","page":"Home","title":"What can it do?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"At its core, this package links together segmented microscopy video of microbots.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This yields individual trajectories with time, position, and shape. Critical measurements like velocity, rotation rate, and traction can be obtained for an arbitrary amount of microbots across many experimental conditions.","category":"page"},{"location":"#Why-this-package?","page":"Home","title":"Why this package?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The alternatives for colloid particle tracking, like TrackPy and TrackMate, do not normally measure the shape or size of particles. For microbots that roll, swim, or walk, these measurements are essential. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Additionally, with the explosion of the field of microrobotics and nano 3D printing, new designs are frequently reported. Every study of these new microbots involves the same measurements: velocity and swimming efficiency.","category":"page"},{"location":"#Why-Julia?","page":"Home","title":"Why Julia?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In short, Julia is easy to read and write, yet retains the speed of statically compiled languages like C and Fortran. It also provides Pluto.jl, a reactive notebook environment that solves all the frustration I've had with Jupyter notebooks and Mathematica. For a more eloquent explanation, see the Julia introduction.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you don't know Julia, don't worry. It is similar and as easy as Python (I'd argue easier). The best learning source is the Computational Thinking course from MIT.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Lastly, the Pluto notebooks included with this package allow you to tinker with established workflows, minimizing the need to reinvent the wheel.","category":"page"}]
}
